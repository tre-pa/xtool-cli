package ${rootPackage.name}.security.user;

import java.util.Arrays;
import java.util.Collections;

import org.keycloak.representations.idm.CredentialRepresentation;
import org.keycloak.representations.idm.UserRepresentation;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.stereotype.Component;

import br.jus.tre_pa.jsecurity.AbstractUserConfiguration;

/**
 * Registro do usuário estagiário. O usuário apenas é registrando em ambiente local (@ConditionalOnProperty).
 * 
 * @author jcruz
 *
 */
@Component
@ConditionalOnProperty(value = "keycloak.auth-server-url", havingValue = "http://localhost:8085/auth", matchIfMissing = false)
public class EstagiarioUser extends AbstractUserConfiguration {

	private static final String PASSWORD = "1234";

	@Override
	public void configure(UserRepresentation representation) {
		representation.setUsername("estag");
		representation.setEmail("estagiario@tre-pa.jus.br");
		representation.setEnabled(true);
		CredentialRepresentation credential = new CredentialRepresentation();
		credential.setType(CredentialRepresentation.PASSWORD);
		credential.setValue(PASSWORD);
		credential.setTemporary(false);
		representation.setCredentials(Arrays.asList(credential));
		// @formatter:off
		representation.setClientRoles(
				Collections.singletonMap(getKcProperties().getClientId(), 
						Arrays.asList("USER")));
		// @formatter:on
	}

}
