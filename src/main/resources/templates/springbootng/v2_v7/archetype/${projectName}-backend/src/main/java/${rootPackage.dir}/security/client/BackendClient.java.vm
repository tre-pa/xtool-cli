package ${rootPackage.name}.security.client;

import java.util.Arrays;
import java.util.List;

import org.keycloak.representations.idm.ClientRepresentation;
import org.springframework.stereotype.Component;

import com.google.common.collect.Lists;

import br.jus.tre_pa.jsecurity.AbstractClientConfiguration;

/**
 * Classe responsável pelo registro da aplicação backend no Keycloak.
 * 
 * @author jcruz
 *
 */
@Component
public class BackendClient extends AbstractClientConfiguration {

	@Override
	public void configure(ClientRepresentation representation) {
		representation.setName(getKcProperties().getClientId());
		representation.setClientId(getKcProperties().getClientId());
		representation.setEnabled(true);
		representation.setSecret(getKcProperties().getSecret());
		representation.setBaseUrl(getKcProperties().getBaseUrl());
		representation.setPublicClient(false);
		representation.setServiceAccountsEnabled(true);
		representation.setDirectAccessGrantsEnabled(true);
		representation.setAuthorizationServicesEnabled(true);
		representation.setDefaultRoles(new String[] { "USER" });
	}

	@Override
	public List<String> roles() {
		return Arrays.asList("REPORT_MNGT");
	}

	@Override
	public ClientRepresentation frontend() {
		ClientRepresentation representation = new ClientRepresentation();
		representation.setName(getKcProperties().getClientId().replace("backend", "frontend"));
		representation.setClientId(getKcProperties().getClientId().replace("backend", "frontend"));
		representation.setEnabled(true);
		representation.setWebOrigins(Lists.newArrayList("*"));
		representation.setRedirectUris(getKcProperties().getRedirectUris());
		representation.setBaseUrl(getKcProperties().getBaseUrl());
		representation.setPublicClient(true);
		representation.setFullScopeAllowed(false);
		return representation;
	}

}
