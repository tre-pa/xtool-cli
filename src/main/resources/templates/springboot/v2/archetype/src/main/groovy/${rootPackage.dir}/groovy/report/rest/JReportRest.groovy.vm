#set ($OB = "${")
#set ($CB = "}")
package ${rootPackage.name}.groovy.report.rest

import javax.persistence.EntityNotFoundException

import org.springframework.beans.factory.annotation.Autowired
import org.springframework.core.io.InputStreamResource
import org.springframework.data.domain.Page
import org.springframework.data.domain.Pageable
import org.springframework.data.domain.Sort
import org.springframework.http.HttpHeaders
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity
import org.springframework.web.bind.annotation.GetMapping
import org.springframework.web.bind.annotation.PathVariable
import org.springframework.web.bind.annotation.PostMapping
import org.springframework.web.bind.annotation.RequestBody
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RestController

import ${rootPackage.name}.groovy.qy.QyFilterable
import ${rootPackage.name}.groovy.qy.QyPayload
import ${rootPackage.name}.groovy.qy.QyRest
import ${rootPackage.name}.groovy.report.domain.JReport
import ${rootPackage.name}.groovy.report.repository.JReportRepository
import ${rootPackage.name}.groovy.report.repository.specification.JReportSpecification
import ${rootPackage.name}.groovy.report.service.JReportService

@RestController
@RequestMapping("/api/jreport")
class JReportRest extends QyRest<JReport, Long, JReportSpecification, JReportRepository> {

	@Autowired
	JReportService jreportService

	/**
	 * Retorna a fonte de dados(datasource) do relatório.
	 * 
	 * @param id Id do relatório.
	 * @return
	 */
	@PostMapping("/{id}/datasource")
	ResponseEntity<?> executeSQL(@PathVariable Long id, Pageable pageable, @RequestBody(required=false) QyPayload payload) {
		JReport jreport = this.getRepository().findById(id).orElseThrow { new EntityNotFoundException("Relatório não encontrado: Id=${OB}id${CB}") }
		ResponseEntity.ok(jreportService.executeSQLPageable(jreport.sql, pageable, payload))
	}
	
	/**
	 * 
	 * @param id
	 * @return
	 */
	@PostMapping(path = "/{id}/pdf", produces = MediaType.APPLICATION_OCTET_STREAM_VALUE)
	ResponseEntity<?> genGPDF(@PathVariable Long id, Sort sort ,@RequestBody(required=false) QyFilterable filter) {
		JReport jreport = this.getRepository().findById(id).orElseThrow { new EntityNotFoundException("Relatório não encontrado: Id=${OB}id${CB}") }

		HttpHeaders headers = new HttpHeaders();
		headers.add("Content-Disposition", "inline; filename=report.pdf" );
		ByteArrayInputStream bais = jreportService.genGPDF(jreport, sort, filter);
		// @formatter:off
		ResponseEntity
				.ok()
				.headers(headers)
				.contentType(MediaType.APPLICATION_PDF)
				.body(new InputStreamResource(bais))
		// @formatter:on
	}
}
