#set ($OB = "${")
#set ($CB = "}")
package ${rootPackage.name}.groovy.jii.sql.oracle

import org.apache.commons.lang3.StringUtils
import org.springframework.data.domain.Sort
import org.springframework.jdbc.core.JdbcTemplate

import ${rootPackage.name}.groovy.jii.sql.JiiSqlOrderByStep
import ${rootPackage.name}.groovy.jii.sql.JiiSqlPaginationStep

class OracleJiiOrderByStep implements JiiSqlOrderByStep {

	JdbcTemplate jdbcTemplate

	Map sqlFragments = [:]

	public OracleJiiOrderByStep(Map sqlFragments, JdbcTemplate jdbcTemplate) {
		super()
		this.sqlFragments = sqlFragments
		this.jdbcTemplate = jdbcTemplate
	}

	@Override
	public List<Map<String, Object>> fetchMaps() {
		jdbcTemplate.queryForList(sqlFragments)
	}

	@Override
	public JiiSqlPaginationStep orderBy(String sortSql) {
		if(StringUtils.isNotBlank(sortSql)) {
			sqlFragments['sql'] = "${OB}sqlFragments['sql']${CB} order by ${OB}sortSql${CB} "
		}
		new OracleJiiPaginationStep(sqlFragments, jdbcTemplate)
	}

	@Override
	public JiiSqlPaginationStep orderBy(Sort sort) {
		String orders = sort?.orders.collect { "${OB}it.property${CB} ${OB}it.direction${CB} " }.join(",")
		orderBy(orders);
	}
}
