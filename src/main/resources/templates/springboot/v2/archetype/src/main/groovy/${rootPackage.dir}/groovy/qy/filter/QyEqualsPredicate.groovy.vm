#set ($OB = "${")
#set ($CB = "}")
package ${rootPackage.name}.groovy.qy.filter;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

/**
 * Classe que representa uma condição de igualdade.
 * 
 * @author jcruz
 *
 */
class QyEqualsPredicate extends QyPredicate {

	@Override
	String toSql() {
		if (isBoolean()) return this.dataField + " = " + ((boolean) this.value ? 1 : 0);
		if (getValue().equals("@null")) return "${OB}this.dataField${CB} is null ";
		if (getValue().equals("@notnull")) return "${OB}this.dataField${CB} is not null ";
		this.dataField + " = " + this.surroundSingleQuotes(this.value);
	}

	@Override
	String toJpql() {
		if (isBoolean()) return this.dataField + " is " + (boolean) this.getValue();
		if (getValue().equals("@null")) return "${OB}this.dataField${CB} is null ";
		if (getValue().equals("@notnull")) return "${OB}this.dataField${CB} is not null ";
		this.dataField + " = " + this.surroundSingleQuotes(this.getValue());
	}

	@Override
	<T> Predicate toPredicate(Class<T> clazz, Root<T> root, CriteriaQuery<?> cq, CriteriaBuilder cb) {
		Class<?> dataFieldType = getDataType(clazz, this.dataField);
		if (dataFieldType == Boolean.class && (boolean) this.value == true) return cb.isTrue(root.get(this.dataField));
		if (dataFieldType == Boolean.class && (boolean) this.value == false) return cb.isFalse(root.get(this.dataField));
		if (this.value as String == "@notnull") return cb.isNotNull(root.get(this.dataField));
		if (this.value as String == "@null") return cb.isNull(root.get(this.dataField));
		if (dataFieldType.isEnum()) return cb.equal(root.get(this.dataField), Enum.valueOf(dataFieldType, this.value));
		cb.equal(root.get(this.dataField), this.value);
	}
}
