#set ($OB = "${")
#set ($CB = "}")
package ${rootPackage.name}.groovy.qy.filter;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

/**
 * Classe que representa uma operação de like.
 * 
 * @author jcruz
 *
 */
public class QyContainsPredicate extends QyPredicate {

	@Override
	public String toSql() {
		"${OB}this.dataField${CB} like '%${OB}this.value${CB}%'"
	}

	@Override
	public String toJpql() {
		"${OB}this.dataField${CB} like '%${OB}this.value${CB}%'"
	}

	@Override
	public <T> Predicate toPredicate(Class<T> clazz, Root<T> root, CriteriaQuery<?> cq, CriteriaBuilder cb) {
		Class<?> dataFieldType = getDataType(clazz, this.dataField);
		if (dataFieldType == String.class) return cb.like(cb.upper(root.get(this.dataField)), "%" + ((String) this.value).toUpperCase() + "%");
		throw new IllegalArgumentException(String.format("Não foi possível montar um predicado para o campo '%s' com o tipo 'contains'", this.dataField));
	}

}
