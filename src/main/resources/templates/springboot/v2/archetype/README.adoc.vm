#set ($DS = "$")
= ${projectDesc}
:toc:
:toc-title: Índice
:sectnums:
:experimental:

== Configuração do Ambiente de Desenvolvimento 

=== Instalação do Groovy no Eclipse

https://github.com/groovy/groovy-eclipse/wiki

[width="100%",cols="41%,59%",options="header",]
|=======================================================================
|Versão do Eclipse |Plugin
|4.9 (2018-09) |http://dist.springsource.org/release/GRECLIPSE/e4.9

|4.8 (Photon) |http://dist.springsource.org/release/GRECLIPSE/e4.8

|4.7 (Oxygen) |http://dist.springsource.org/release/GRECLIPSE/e4.7

|4.6 (Neon) |http://dist.springsource.org/release/GRECLIPSE/e4.6

|4.5 (Mars) |http://dist.springsource.org/release/GRECLIPSE/e4.5

|4.4 (Luna) |http://dist.springsource.org/release/GRECLIPSE/e4.4

|4.3 (Kepler) |http://dist.springsource.org/release/GRECLIPSE/e4.3

|4.3j8 (Kepler with Java 8 patch)
|http://dist.springsource.org/release/GRECLIPSE/e4.3-j8

|4.2 and 3.8 (Juno) |http://dist.springsource.org/release/GRECLIPSE/e4.2

|3.7 (Indigo) |http://dist.springsource.org/release/GRECLIPSE/e3.7
|=======================================================================
=== Instalção do Lombok

**Introdução ao Lombok**

O Projeto Lombok é uma biblioteca java que retira a verbosidade do código, sem a necessidade de criar método getter ou equals novamente, com uma anotação sua classe tem um construtor com todos os recursos.


**1.** Para Instalar o Lombok baixe a versão do lombok1.18.6.jar, que está no link http://repo.tre-pa.jus.br/downloads/

**2.** Após ter baixado o jar do lombok é necessário executá-lo com o seguinte comando no terminal java -jar lombok.jar, em seguida irá aparecer um modal que pedirá para você selecionar o local de onde está instalada sua IDE Sts/Eclipse.

image::docs/assets/lombok.png[200,1095] 

=== Instalação de Plugins

**1.** Instalação do Plugin Editor Asciidoc no STS/Eclipse.

No STS/Eclipse entre na marketplace da IDE e pesquise pelo nome Asccidoctor Editor e siga o processo de instalação.

image::docs/assets/asciidoctor-editor.png[200,1095] 

Caso queira saber mais sobre a biblioteca acesse o site oficial: http://plantuml.com/ 

 
== Instalação do Keycloak

**1.** Baixa o http://repo.tre-pa.jus.br/downloads/keycloak-4.8.3.Final.zip[keycloak]

**2.** Descompactar

Diretório de Instalação: $HOME/opt/

sudo tar xvfz ~/Downloads/keycloak-4.8.3.Final.tar.gz

**3.** Alterar a porta do Keycloak editando o arquivo standalone.xml

[source, sh]
----
sudo gedit /opt/keycloak-4.8.3.Final/standalone/configuration/standalone.xml
----

Alterar a linha de definição do offset de 

[source, sh]
----
<socket-binding-group name="standard-sockets" default-interface="public" port-offset="{$DS}{jboss.socket.binding.port-offset:0}">
----

Para:

[source, sh]
----
<socket-binding-group name="standard-sockets" default-interface="public" port-offset="{$DS}{jboss.socket.binding.port-offset:5}">
----

**4.** Iniciar o keycloak 

[source, sh]
----
/opt/keycloak-4.8.3.Final/bin/standalone.sh &
---- 

**5.** Acessar no navegador localhost:8085/auth

[source, sh]
----
usuario:admin
senha:admin
----


=== Registrando a aplicação no keycloak em ambiente local

Para registrar a aplicação como __client__ no keycloak juntamente com as opções de autorização siga com os procedimentos abaixo: 

IMPORTANT: Para a correta execução do script é necessário que a instalação do *keycloak-4.8.3.Final* esteja localizada em `${DS}HOME/opt/` e o serviço do keycloak na porta `8085`.

. Abrir o terminal do linux. 

. Entrar na raiz do projeto *${projectName}* e executar o comando para tornar o script *scripts/keycloak/register-client.sh* executável: ` chmod +x scripts/keycloak/register-client.sh`

. Executar o script: ` ./scripts/keycloak/register-client.sh`

. No navegador web, logar na interface de administração do keycloak (http://localhost:8085/auth).

. Ir em menu:Clients[${projectName} > Authorization > Settings > Import > Select file]

. Selecionar o arquivo localizado em: `${projectName}/src/main/resources/client-authz-config.json`

. Clicar em *Import*.

Após os procedimentos acima a aplicação ${projectName} estará com seu registro de segurança no keycloak efetivado.

Obs.: Se existir o front-end (Angular), deve-se então proceder com o restante da configuração do keycloak conforme o arquivo *README.adoc* localizado na pasta raiz do front-end.

== Acesso no H2

**Introdução**

Após ter criado a sua aplicação você precisará de um banco de dados para realizar teste, o banco utilizado por default pelo stool é o H2, como pode swr observado 
no arquivo *src/main/resources/application.properties*, no item *spring.datasource.url*

**1.** Para acessar o banco h2 é necessário que aplicação esteja rodando. Para acessar a url do banco siga o padrão abaixo:

[source,sh]
-----

locahost:8080/${projectName}-service/h2/

----- 
 
**2.** Após a instalação você verá a tela de credenciais, nessa parte você deve substituir as configurações descrita abaixo pelas que estão no arquivo `${projectName}/src/main/resources/application.properties`

image::docs/assets/h2.png[200,1095]

[source,sh]
----
JDBC URL:
User Name:
Password: 
----

IMPORTANT: Caso não venha uma senha definida no projeto você pode criar uma como padrão, alterando as linhas abaixo no *src/main/resources/application.properties*:

[source,sh]
-----
	spring.datasource.username
	spring.datasource.password
----- 

