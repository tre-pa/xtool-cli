import {
  Component,
  OnDestroy,
  ViewChild,
  OnInit
} from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Router } from '@angular/router';
import { Title } from '@angular/platform-browser';
import { DxDataGridComponent } from 'devextreme-angular/ui/data-grid';
import { takeUntil } from 'rxjs/operators';
import { confirm } from 'devextreme/ui/dialog';
import { Subject } from 'rxjs';
import DataSource from 'devextreme/data/data_source';
import notify from 'devextreme/ui/notify';

import { ${entity.name}Service } from 'src/app/service/${entity.tsFileName}.service';
import { JiiStore } from 'src/app/@core/jii/jii-store';
import { ${entity.name} } from 'src/app/domain/${entity.tsFileName}';

@Component({
  selector: 'app-${entity.tsFileName}',
  templateUrl: './${entity.tsFileName}-list.component.html',
  styles: []
})
export class ${entity.name}ListComponent implements OnInit, OnDestroy {

  @ViewChild(DxDataGridComponent)
  dataGrid: DxDataGridComponent;

  pageSize: number = 20;

  ${entity.instanceName}DataSource: DataSource;
  ${entity.instanceName}JiiStore: JiiStore<${entity.name}>;
  count: number = 0;

  ${ngListTemplates.createHeaderFiltersDecl($entity)}

  destroy$: Subject<boolean> = new Subject<boolean>();

  constructor(
    private ${entity.instanceName}Service: ${entity.name}Service,
    private httpClient: HttpClient,
    private router: Router,
    private title: Title
  ) {
    this.${entity.instanceName}JiiStore = new JiiStore(this.httpClient, '/${entity.apiName}');
  }

  ngOnInit() {
    this.title.setTitle('${title}');
    this.initHeaderFilters();
    this.${entity.instanceName}DataSource = new DataSource({
      store: this.${entity.instanceName}JiiStore
    });
    this.${entity.instanceName}JiiStore.onLoad
      .subscribe(() => this.count = this.${entity.instanceName}JiiStore.totalElements);
  }

  ngOnDestroy() {
    this.destroy$.next(true);
    this.destroy$.unsubscribe();
  }

  create() {
    this.router.navigate(['${entity.apiName}', 'edit']);
  }

  edit(id: number) {
    this.router.navigate(['${entity.apiName}', 'edit', id]);
  }

  detail(id: number) {
    this.router.navigate(['${entity.apiName}', id]);
  }

  confirmDelete(${entity.instanceName}: ${entity.name}) {
    confirm(`Deseja mesmo excluir ${entity.name}?`, "Confirme Exclusão")
      .then(result => {
        if (result) this.delete(${entity.instanceName}.id);
        else notify('Exclusão de ${entity.name} cancelada', 'info', 3000);
      });
  }

  private delete(id: number) {
    this.${entity.instanceName}Service.delete(id)
      .pipe(takeUntil(this.destroy$))
      .subscribe(() => {
        notify('${entity.name} excluído com sucesso', 'success', 3000);
        this.dataGrid.instance.refresh();
      });
  }

  private initHeaderFilters() {
    ${ngListTemplates.createHeaderFiltersImpl($entity)}
  }

  onToolbarPreparing(toolbar) {
    toolbar.items.unshift({
      location: 'before',
      widget: 'dxButton',
      options: {
        text: 'Nova',
        stylingMode: 'contained',
        type: 'success',
        onClick: () => this.create()
      }
    });
  }

}
