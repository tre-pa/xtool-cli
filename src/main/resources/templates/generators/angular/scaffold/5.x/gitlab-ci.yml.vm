image: node:6

variables: 
  # Define o caminho para deploy de projetos angular.
  ANGULAR_DEPLOY_HOME: $DEPLOY_HOME/www

cache:
  paths:
  - node_modules/

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - npm install
    - ng build --prod --progress=false --base-href /$CI_PROJECT_NAME/ -op dist/$CI_PROJECT_NAME
    - cd ./dist
    - zip -r $CI_PROJECT_NAME.zip ./
  artifacts:
    paths:
      - dist/

# Job de template para realização dos passos de deploy
.deploy_template: &deploy_definition
  script:
    # Realiza a cópia dos binários compactados (.zip) da aplicação para o servidor (/tmp)
    - scp ./dist/$CI_PROJECT_NAME.zip $SSH_USER@$DEPLOY_HOST:/tmp/$CI_PROJECT_NAME.zip
    # Descompacta os binários da aplicação
    - ssh $SSH_USER@$DEPLOY_HOST "cd /tmp; sudo rm -rf $CI_PROJECT_NAME; unzip $CI_PROJECT_NAME.zip"
    # Move os binários descompactados para a pasta de deploy de projetos angular $ANGULAR_DEPLOY_HOME
    - ssh $SSH_USER@$DEPLOY_HOST "sudo rm -rf $ANGULAR_DEPLOY_HOME/$CI_PROJECT_NAME; sudo mv /tmp/$CI_PROJECT_NAME $ANGULAR_DEPLOY_HOME"

deploy_dev:
  variables:
    DEPLOY_HOST: $DEV_HOST
  <<: *deploy_definition
  environment:
    name: dev
    url: http://dev.tre-pa.jus.br/$CI_PROJECT_NAME
  stage: deploy
  only:
    - master
deploy_prod:
  variables:
    DEPLOY_HOST: $PROD_HOST
  <<: *deploy_definition
  environment:
    name: prod
    url: http://prod.tre-pa.jus.br/$CI_PROJECT_NAME
  stage: deploy
  only:
    - tags
  when: manual